service: tb365-s3-stage

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: stage
  deploymentBucket:
    name: tb365-serverless-deployments-stage
  httpApi:
    cors: true
    authorizers:
      cognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_RIOPGg1Cq
        audience:
          - 2addji24p0obg5sqedgise13i4

  environment:
    S3_BUCKET: templatebuilder365-user-data
    COGNITO_USER_POOL_ID: us-east-1_RIOPGg1Cq
    COGNITO_CLIENT_ID: 2addji24p0obg5sqedgise13i4

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::templatebuilder365-user-data
        - arn:aws:s3:::templatebuilder365-user-data/*

functions:
  saveProject:
    handler: functions/s3-projects.saveProject
    timeout: 30
    events:
      - httpApi:
          path: /api/projects/save
          method: post
          authorizer:
            name: cognitoAuthorizer

  listProjects:
    handler: functions/s3-projects.listProjects
    timeout: 30
    events:
      - httpApi:
          path: /api/projects/list
          method: get
          authorizer:
            name: cognitoAuthorizer

  loadProject:
    handler: functions/s3-projects.loadProject
    timeout: 30
    events:
      - httpApi:
          path: /api/projects/load/{projectName}
          method: get
          authorizer:
            name: cognitoAuthorizer

  deleteProject:
    handler: functions/s3-projects.deleteProject
    timeout: 30
    events:
      - httpApi:
          path: /api/projects/delete/{projectName}
          method: delete
          authorizer:
            name: cognitoAuthorizer

package:
  patterns:
    - 'functions/s3-projects.js'
    - 'package-s3.json'
    - '!node_modules/**'
    - '!.serverless/**'
    - '!services/**'
    - '!utils/**'
    - '!test-output/**'
    - '!*.zip'

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3001
    stage: stage